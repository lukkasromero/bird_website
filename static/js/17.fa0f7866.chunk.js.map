{"version":3,"sources":["../../src/index.ts"],"names":["URI_AVAILABLE","UserRejectedRequestError","_this","name","constructor","message","_inheritsLoose","Error","getSupportedChains","supportedChainIds","rpc","Object","keys","map","Number","k","undefined","WalletConnectConnector","config","_this2","handleChainChanged","bind","handleAccountsChanged","handleDisconnect","_proto","chainId","emitUpdate","accounts","account","emitDeactivate","walletConnectProvider","stop","removeListener","activate","_this4","enable","then","error","on","provider","wc","connected","createSession","length","emit","uri","m","WalletConnectProvider","getProvider","getChainId","send","getAccount","deactivate","close","_this12$walletConnect","AbstractConnector","update","ConnectorEvent","Update","emitError","Deactivate","EventEmitter"],"mappings":"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","file":"static/js/17.fa0f7866.chunk.js","sourcesContent":["import { EventEmitter } from 'events'\nimport { AbstractConnectorArguments, ConnectorUpdate, ConnectorEvent } from '@web3-react/types'\n\nexport abstract class AbstractConnector extends EventEmitter {\n  public readonly supportedChainIds?: number[]\n\n  constructor({ supportedChainIds }: AbstractConnectorArguments = {}) {\n    super()\n    this.supportedChainIds = supportedChainIds\n  }\n\n  public abstract async activate(): Promise<ConnectorUpdate>\n  public abstract async getProvider(): Promise<any>\n  public abstract async getChainId(): Promise<number | string>\n  public abstract async getAccount(): Promise<null | string>\n  public abstract deactivate(): void\n\n  protected emitUpdate(update: ConnectorUpdate): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Update}' with payload`, update)\n    }\n    this.emit(ConnectorEvent.Update, update)\n  }\n\n  protected emitError(error: Error): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Error}' with payload`, error)\n    }\n    this.emit(ConnectorEvent.Error, error)\n  }\n\n  protected emitDeactivate(): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Deactivate}'`)\n    }\n    this.emit(ConnectorEvent.Deactivate)\n  }\n}\n"],"sourceRoot":""}